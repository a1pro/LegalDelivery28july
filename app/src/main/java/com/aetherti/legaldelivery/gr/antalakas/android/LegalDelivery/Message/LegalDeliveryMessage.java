package com.aetherti.legaldelivery.gr.antalakas.android.LegalDelivery.Message;
// Generated by proto2javame, Wed Nov 21 12:25:56 IST 2012.

import java.io.IOException;
import java.io.InputStream;
import java.util.*;

import net.jarlehansen.protobuf.javame.UninitializedMessageException;
import net.jarlehansen.protobuf.javame.input.InputReader;
import net.jarlehansen.protobuf.javame.input.DelimitedInputStream;
import net.jarlehansen.protobuf.javame.input.DelimitedSizeUtil;
import net.jarlehansen.protobuf.javame.ComputeSizeUtil;
import net.jarlehansen.protobuf.javame.output.OutputWriter;
import net.jarlehansen.protobuf.javame.AbstractOutputWriter;
import net.jarlehansen.protobuf.javame.input.taghandler.UnknownTagHandler;
import net.jarlehansen.protobuf.javame.input.taghandler.DefaultUnknownTagHandlerImpl;
import com.aetherti.legaldelivery.gr.antalakas.android.LegalDelivery.Message.RelatedPersonMessages;
import com.aetherti.legaldelivery.gr.antalakas.android.LegalDelivery.Message.RelatedBusinessMessages;

public final class LegalDeliveryMessage extends AbstractOutputWriter {
	private static UnknownTagHandler unknownTagHandler = DefaultUnknownTagHandlerImpl.newInstance();


//    public String DeviceID;
//	
//	public String getDeviceId() {
//		return DeviceID;
//	}
//	public void setDeviceId(String deviceId) {
//		DeviceID = deviceId;
//	}
	
	private final String LegalDeliveryID;
	private static final int fieldNumberLegalDeliveryID = 1;
	
	private final String DeviceID;
	private static final int fieldNumberDeviceId = 74;
	private boolean hasDeviceId = false;

	private final String JobNo;
	private static final int fieldNumberJobNo = 2;
	private final boolean hasJobNo;

	private final String InputDate;
	private static final int fieldNumberInputDate = 3;
	private final boolean hasInputDate;

	private final String ServiceType;
	private static final int fieldNumberServiceType = 4;
	private final boolean hasServiceType;

	private final String LTServiceType;
	private static final int fieldNumberLTServiceType = 5;
	private final boolean hasLTServiceType;

	private final String Client;
	private static final int fieldNumberClient = 6;
	private final boolean hasClient;

	private final String CaseNo;
	private static final int fieldNumberCaseNo = 7;
	private final boolean hasCaseNo;

	private final String LTFullname;
	private static final int fieldNumberLTFullname = 8;
	private final boolean hasLTFullname;

	private final String LTAddress;
	private static final int fieldNumberLTAddress = 9;
	private final boolean hasLTAddress;

	private final String LTApt;
	private static final int fieldNumberLTApt = 10;
	private final boolean hasLTApt;

	private final String LTCity;
	private static final int fieldNumberLTCity = 11;
	private final boolean hasLTCity;

	private final String LTState;
	private static final int fieldNumberLTState = 12;
	private final boolean hasLTState;

	private final String LTZip;
	private static final int fieldNumberLTZip = 13;
	private final boolean hasLTZip;

	private final String ServiceResult;
	private static final int fieldNumberServiceResult = 14;
	private final boolean hasServiceResult;

	private final String DateOfService;
	private static final int fieldNumberDateOfService = 15;
	private final boolean hasDateOfService;

	private final String TimeOfService;
	private static final int fieldNumberTimeOfService = 16;
	private final boolean hasTimeOfService;

	private final String GPSDate1;
	private static final int fieldNumberGPSDate1 = 17;
	private final boolean hasGPSDate1;

	private final String GPSTime1;
	private static final int fieldNumberGPSTime1 = 18;
	private final boolean hasGPSTime1;

	private final double GPSLat1;
	private static final int fieldNumberGPSLat1 = 19;
	private final boolean hasGPSLat1;

	private final double GPSLon1;
	private static final int fieldNumberGPSLon1 = 20;
	private final boolean hasGPSLon1;

	private final String GPSDate2;
	private static final int fieldNumberGPSDate2 = 21;
	private final boolean hasGPSDate2;

	private final String GPSTime2;
	private static final int fieldNumberGPSTime2 = 22;
	private final boolean hasGPSTime2;

	private final double GPSLat2;
	private static final int fieldNumberGPSLat2 = 23;
	private final boolean hasGPSLat2;

	private final double GPSLon2;
	private static final int fieldNumberGPSLon2 = 24;
	private final boolean hasGPSLon2;

	private final String GPSDate3;
	private static final int fieldNumberGPSDate3 = 25;
	private final boolean hasGPSDate3;

	private final String GPSTime3;
	private static final int fieldNumberGPSTime3 = 26;
	private final boolean hasGPSTime3;

	private final double GPSLat3;
	private static final int fieldNumberGPSLat3 = 27;
	private final boolean hasGPSLat3;

	private final double GPSLon3;
	private static final int fieldNumberGPSLon3 = 28;
	private final boolean hasGPSLon3;

	private final String PServ;
	private static final int fieldNumberPServ = 29;
	private final boolean hasPServ;

	private final String CServ;
	private static final int fieldNumberCServ = 30;
	private final boolean hasCServ;

	private final String CorpRecipient;
	private static final int fieldNumberCorpRecipient = 31;
	private final boolean hasCorpRecipient;

	private final String CorpRecipientTitle;
	private static final int fieldNumberCorpRecipientTitle = 32;
	private final boolean hasCorpRecipientTitle;

	private final String PersonSeenSubstitute;
	private static final int fieldNumberPersonSeenSubstitute = 33;
	private final boolean hasPersonSeenSubstitute;

	private final String PersonSeenDoeSubstitute;
	private static final int fieldNumberPersonSeenDoeSubstitute = 34;
	private final boolean hasPersonSeenDoeSubstitute;

	private final String PersonSeenPersonal;
	private static final int fieldNumberPersonSeenPersonal = 35;
	private final boolean hasPersonSeenPersonal;

	private final String PersonsNotSeenPersonal;
	private static final int fieldNumberPersonsNotSeenPersonal = 36;
	private final boolean hasPersonsNotSeenPersonal;

	private final String DoorLock;
	private static final int fieldNumberDoorLock = 37;
	private final boolean hasDoorLock;

	private final String OtherCommentsC;
	private static final int fieldNumberOtherCommentsC = 38;
	private final boolean hasOtherCommentsC;

	private final String OtherCommentsP;
	private static final int fieldNumberOtherCommentsP = 39;
	private final boolean hasOtherCommentsP;

	private final int FirstAttempt;
	private static final int fieldNumberFirstAttempt = 40;

	private final int SecondAttempt;
	private static final int fieldNumberSecondAttempt = 41;

	private final int ThirdAttempt;
	private static final int fieldNumberThirdAttempt = 42;

	private final int ServiceCompleted;
	private static final int fieldNumberServiceCompleted = 43;

	private final RelatedPersonMessages RelatedPersons;
	private static final int fieldNumberRelatedPersons = 44;
	private final boolean hasRelatedPersons;

	private final RelatedBusinessMessages RelatedBusiness;
	private static final int fieldNumberRelatedBusiness = 45;
	private final boolean hasRelatedBusiness;

	private final String STND_ServiceType;
	private static final int fieldNumberSTND_ServiceType = 46;
	private final boolean hasSTND_ServiceType;

	private final String STND_TYPE10DESC;
	private static final int fieldNumberSTND_TYPE10DESC = 47;
	private final boolean hasSTND_TYPE10DESC;

	private final String STND_INDEXNO;
	private static final int fieldNumberSTND_INDEXNO = 48;
	private final boolean hasSTND_INDEXNO;

	private final String STND_Court;
	private static final int fieldNumberSTND_Court = 49;
	private final boolean hasSTND_Court;

	private final String STND_County;
	private static final int fieldNumberSTND_County = 50;
	private final boolean hasSTND_County;

	private final String STND_Plantiff;
	private static final int fieldNumberSTND_Plantiff = 51;
	private final boolean hasSTND_Plantiff;

	private final String STND_Defendant;
	private static final int fieldNumberSTND_Defendant = 52;
	private final boolean hasSTND_Defendant;

	private final String STND_FULLNAME;
	private static final int fieldNumberSTND_FULLNAME = 53;
	private final boolean hasSTND_FULLNAME;

	private final String STND_ADDRESS;
	private static final int fieldNumberSTND_ADDRESS = 54;
	private final boolean hasSTND_ADDRESS;

	private final String STND_APT;
	private static final int fieldNumberSTND_APT = 55;
	private final boolean hasSTND_APT;

	private final String STND_CITY;
	private static final int fieldNumberSTND_CITY = 56;
	private final boolean hasSTND_CITY;

	private final String STND_STATE;
	private static final int fieldNumberSTND_STATE = 57;
	private final boolean hasSTND_STATE;

	private final String STND_ZIP;
	private static final int fieldNumberSTND_ZIP = 58;
	private final boolean hasSTND_ZIP;

	private final String LTBIZNAME;
	private static final int fieldNumberLTBIZNAME = 59;
	private final boolean hasLTBIZNAME;

	private final String PPSERVED1;
	private static final int fieldNumberPPSERVED1 = 60;
	private final boolean hasPPSERVED1;
	
	private final String ServerLicenceNo;
	private static final int fieldNumberServerLicenceNo = 61;
	private final boolean hasServerLicenceNo;
	
	private final String GpsTimeOfService;
	private static final int fieldNumberGpsTimeOfService = 62;
	private final boolean hasGpsTimeOfService;
	
	private final String GpsTimeOfFirstAttempt;
	private static final int fieldNumberGpsTimeOfFirstAttempt = 63;
	private final boolean hasGpsTimeOfFirstAttempt;

	private final String GpsTimeOfSecondAttempt;
	private static final int fieldNumberGpsTimeOfSecondAttempt = 64;
	private final boolean hasGpsTimeOfSecondAttempt;
	
	private final String GpsTimeOfThirdAttempt;
	private static final int fieldNumberGpsTimeOfThirdAttempt = 65;
	private final boolean hasGpsTimeOfThirdAttempt;

	private final String P_Gender;
	private static final int fieldNumberP_Gender = 66;
	private final boolean hasP_Gender;

	private final String P_Skincolor;
	private static final int fieldNumberP_Skincolor = 67;
	private final boolean hasP_Skincolor;

	
	private final String P_Hair;
	private static final int fieldNumberP_Hair = 67;
	private final boolean hasP_Hair;

	private final String P_Age;
	private static final int fieldNumberP_Age = 67;
	private final boolean hasP_Age;


	private final String P_Height;
	private static final int fieldNumberP_Height = 67;
	private final boolean hasP_Height;

	private final String P_Weight;
	private static final int fieldNumberP_Weight= 68;
	private final boolean hasP_Weight;

	private final String C_Entry;
	private static final int fieldNumberC_Entry = 69;
	private final boolean hasC_Entry;

	private final String C_Wall;
	private static final int fieldNumberC_Wall = 70;
	private final boolean hasC_Wall;

	private final String C_Door;
	private static final int fieldNumberC_Door = 71;
	private final boolean hasC_Door;

	private final String C_Floor;
	private static final int fieldNumberC_Floor= 72;
	private final boolean hasC_Floor;

	private final String C_Lock;
	private static final int fieldNumberC_Lock = 73;
	private final boolean hasC_Lock;
	
	
	private final String producttype;
	private static final int fieldNumberproducttype= 75;
	private final boolean hasproducttype;
	
	public static Builder newBuilder() {
		return new Builder();
	}

	public LegalDeliveryMessage(final Builder builder) {
		if (builder.hasLegalDeliveryID && builder.hasFirstAttempt &&
				builder.hasSecondAttempt && builder.hasThirdAttempt && builder.hasServiceCompleted ) {
			
			
			this.P_Gender = builder.P_Gender;
			this.hasP_Gender = builder.hasP_Gender;
			this.P_Skincolor = builder.P_Skincolor;
			this.hasP_Skincolor = builder.hasP_Skincolor;
			this.P_Hair = builder.P_Hair;
			this.hasP_Hair = builder.hasP_Hair;
			
			this.P_Age = builder.P_Age;
			this.hasP_Age = builder.hasP_Age;
			
			this.P_Height = builder.P_Height;
			this.hasP_Height = builder.hasP_Height;
			this.P_Weight = builder.P_Weight;
			this.hasP_Weight = builder.hasP_Weight;
			
			this.C_Entry = builder.C_Entry;
			this.hasC_Entry = builder.hasC_Entry;
			this.C_Wall = builder.C_Wall;
			this.hasC_Wall = builder.hasC_Wall;
			this.C_Door = builder.C_Door;
			this.hasC_Door = builder.hasC_Door;
			this.C_Floor = builder.C_Floor;
			this.hasC_Floor = builder.hasC_Floor;
			this.C_Lock = builder.C_Lock;
			this.hasC_Lock = builder.hasC_Lock;
			
			/*this.DoorLock = builder.DoorLock;
			this.hasDoorLock = builder.hasDoorLock;
			*/
			
			
			this.DeviceID = builder.DeviceID;
			this.LegalDeliveryID = builder.LegalDeliveryID;
			this.JobNo = builder.JobNo;
			this.hasJobNo = builder.hasJobNo;
			this.InputDate = builder.InputDate;
			this.hasInputDate = builder.hasInputDate;
			this.ServiceType = builder.ServiceType;
			this.hasServiceType = builder.hasServiceType;
			this.LTServiceType = builder.LTServiceType;
			this.hasLTServiceType = builder.hasLTServiceType;
			this.Client = builder.Client;
			this.hasClient = builder.hasClient;
			this.CaseNo = builder.CaseNo;
			this.hasCaseNo = builder.hasCaseNo;
			this.LTFullname = builder.LTFullname;
			this.hasLTFullname = builder.hasLTFullname;
			this.LTAddress = builder.LTAddress;
			this.hasLTAddress = builder.hasLTAddress;
			this.LTApt = builder.LTApt;
			this.hasLTApt = builder.hasLTApt;
			this.LTCity = builder.LTCity;
			this.hasLTCity = builder.hasLTCity;
			this.LTState = builder.LTState;
			this.hasLTState = builder.hasLTState;
			this.LTZip = builder.LTZip;
			this.hasLTZip = builder.hasLTZip;
			this.ServiceResult = builder.ServiceResult;
			this.hasServiceResult = builder.hasServiceResult;
			this.DateOfService = builder.DateOfService;
			this.hasDateOfService = builder.hasDateOfService;
			this.TimeOfService = builder.TimeOfService;
			this.hasTimeOfService = builder.hasTimeOfService;
			this.GPSDate1 = builder.GPSDate1;
			this.hasGPSDate1 = builder.hasGPSDate1;
			this.GPSTime1 = builder.GPSTime1;
			this.hasGPSTime1 = builder.hasGPSTime1;
			this.GPSLat1 = builder.GPSLat1;
			this.hasGPSLat1 = builder.hasGPSLat1;
			this.GPSLon1 = builder.GPSLon1;
			this.hasGPSLon1 = builder.hasGPSLon1;
			this.GPSDate2 = builder.GPSDate2;
			this.hasGPSDate2 = builder.hasGPSDate2;
			this.GPSTime2 = builder.GPSTime2;
			this.hasGPSTime2 = builder.hasGPSTime2;
			this.GPSLat2 = builder.GPSLat2;
			this.hasGPSLat2 = builder.hasGPSLat2;
			this.GPSLon2 = builder.GPSLon2;
			this.hasGPSLon2 = builder.hasGPSLon2;
			this.GPSDate3 = builder.GPSDate3;
			this.hasGPSDate3 = builder.hasGPSDate3;
			this.GPSTime3 = builder.GPSTime3;
			this.hasGPSTime3 = builder.hasGPSTime3;
			this.GPSLat3 = builder.GPSLat3;
			this.hasGPSLat3 = builder.hasGPSLat3;
			this.GPSLon3 = builder.GPSLon3;
			this.hasGPSLon3 = builder.hasGPSLon3;
			this.PServ = builder.PServ;
			this.hasPServ = builder.hasPServ;
			this.CServ = builder.CServ;
			this.hasCServ = builder.hasCServ;
			this.CorpRecipient = builder.CorpRecipient;
			this.hasCorpRecipient = builder.hasCorpRecipient;
			this.CorpRecipientTitle = builder.CorpRecipientTitle;
			this.hasCorpRecipientTitle = builder.hasCorpRecipientTitle;
			this.PersonSeenSubstitute = builder.PersonSeenSubstitute;
			this.hasPersonSeenSubstitute = builder.hasPersonSeenSubstitute;
			this.PersonSeenDoeSubstitute = builder.PersonSeenDoeSubstitute;
			this.hasPersonSeenDoeSubstitute = builder.hasPersonSeenDoeSubstitute;
			this.PersonSeenPersonal = builder.PersonSeenPersonal;
			this.hasPersonSeenPersonal = builder.hasPersonSeenPersonal;
			this.PersonsNotSeenPersonal = builder.PersonsNotSeenPersonal;
			this.hasPersonsNotSeenPersonal = builder.hasPersonsNotSeenPersonal;
			this.DoorLock = builder.DoorLock;
			this.hasDoorLock = builder.hasDoorLock;
			this.OtherCommentsC = builder.OtherCommentsC;
			this.hasOtherCommentsC = builder.hasOtherCommentsC;
			this.OtherCommentsP = builder.OtherCommentsP;
			this.hasOtherCommentsP = builder.hasOtherCommentsP;
			this.FirstAttempt = builder.FirstAttempt;
			this.SecondAttempt = builder.SecondAttempt;
			this.ThirdAttempt = builder.ThirdAttempt;
			this.ServiceCompleted = builder.ServiceCompleted;
			this.RelatedPersons = builder.RelatedPersons;
			this.hasRelatedPersons = builder.hasRelatedPersons;
			this.RelatedBusiness = builder.RelatedBusiness;
			this.hasRelatedBusiness = builder.hasRelatedBusiness;
			this.STND_ServiceType = builder.STND_ServiceType;
			this.hasSTND_ServiceType = builder.hasSTND_ServiceType;
			this.STND_TYPE10DESC = builder.STND_TYPE10DESC;
			this.hasSTND_TYPE10DESC = builder.hasSTND_TYPE10DESC;
			this.STND_INDEXNO = builder.STND_INDEXNO;
			this.hasSTND_INDEXNO = builder.hasSTND_INDEXNO;
			this.STND_Court = builder.STND_Court;
			this.hasSTND_Court = builder.hasSTND_Court;
			this.STND_County = builder.STND_County;
			this.hasSTND_County = builder.hasSTND_County;
			this.STND_Plantiff = builder.STND_Plantiff;
			this.hasSTND_Plantiff = builder.hasSTND_Plantiff;
			this.STND_Defendant = builder.STND_Defendant;
			this.hasSTND_Defendant = builder.hasSTND_Defendant;
			this.STND_FULLNAME = builder.STND_FULLNAME;
			this.hasSTND_FULLNAME = builder.hasSTND_FULLNAME;
			this.STND_ADDRESS = builder.STND_ADDRESS;
			this.hasSTND_ADDRESS = builder.hasSTND_ADDRESS;
			this.STND_APT = builder.STND_APT;
			this.hasSTND_APT = builder.hasSTND_APT;
			this.STND_CITY = builder.STND_CITY;
			this.hasSTND_CITY = builder.hasSTND_CITY;
			this.STND_STATE = builder.STND_STATE;
			this.hasSTND_STATE = builder.hasSTND_STATE;
			this.STND_ZIP = builder.STND_ZIP;
			this.hasSTND_ZIP = builder.hasSTND_ZIP;
			this.LTBIZNAME = builder.LTBIZNAME;
			this.hasLTBIZNAME = builder.hasLTBIZNAME;
			this.PPSERVED1 = builder.PPSERVED1;
			this.hasPPSERVED1 = builder.hasPPSERVED1;
			this.ServerLicenceNo = builder.ServerLicenceNo;
			this.hasServerLicenceNo = builder.hasServerLicenceNo;
			this.GpsTimeOfService=builder.GpsTimeOfService;
			this.hasGpsTimeOfService=builder.hasGpsTimeOfService;
			this.GpsTimeOfFirstAttempt=builder.GpsTimeOfFirstAttempt;
			this.hasGpsTimeOfFirstAttempt=builder.hasGpsTimeOfFirstAttempt;
			this.GpsTimeOfSecondAttempt=builder.GpsTimeOfSecondAttempt;
			this.hasGpsTimeOfSecondAttempt=builder.hasGpsTimeOfSecondAttempt;
			this.GpsTimeOfThirdAttempt=builder.GpsTimeOfThirdAttempt;
			this.hasGpsTimeOfThirdAttempt=builder.hasGpsTimeOfThirdAttempt;
			
			this.producttype=builder.producttype;
			this.hasproducttype=builder.hasproducttype;
		} else {
			throw new UninitializedMessageException("Not all required fields were included (false = not included in message), " + 
				" LegalDeliveryID:" + builder.hasLegalDeliveryID + " FirstAttempt:" + builder.hasFirstAttempt + " SecondAttempt:" + builder.hasSecondAttempt + " ThirdAttempt:" + builder.hasThirdAttempt + " ServiceCompleted:" + builder.hasServiceCompleted + "");
		}
	}

	public static class Builder {
		
		
		
		private String DeviceID;
		private String P_Gender;
		private boolean hasP_Gender = false;


		private String P_Skincolor;
		private boolean hasP_Skincolor = false;
		private String P_Hair;
		private boolean hasP_Hair = false;

		private String P_Age;
		private boolean hasP_Age= false;

		private String P_Height;
		private boolean hasP_Height = false;

		private String P_Weight;
		private boolean hasP_Weight = false;
		
		private String C_Entry;
		private boolean hasC_Entry= false;

		private String C_Wall;
		private boolean hasC_Wall= false;

		private String C_Door;
		private boolean hasC_Door = false;

		private String C_Floor;
		private boolean hasC_Floor = false;

		private String C_Lock;
		private boolean hasC_Lock = false;

		/*private String DoorLock;
		private boolean hasDoorLock= false;
*/
		
		private String LegalDeliveryID;
		private boolean hasLegalDeliveryID = false;
		
//		private String Deviceid;
		private boolean hasDeviceId = false;

		private String JobNo;
		private boolean hasJobNo = false;

		private String InputDate;
		private boolean hasInputDate = false;

		private String ServiceType;
		private boolean hasServiceType = false;

		private String LTServiceType;
		private boolean hasLTServiceType = false;

		private String Client;
		private boolean hasClient = false;

		private String CaseNo;
		private boolean hasCaseNo = false;

		private String LTFullname;
		private boolean hasLTFullname = false;

		private String LTAddress;
		private boolean hasLTAddress = false;

		private String LTApt;
		private boolean hasLTApt = false;

		private String LTCity;
		private boolean hasLTCity = false;

		private String LTState;
		private boolean hasLTState = false;

		private String LTZip;
		private boolean hasLTZip = false;

		private String ServiceResult;
		private boolean hasServiceResult = false;

		private String DateOfService;
		private boolean hasDateOfService = false;

		private String TimeOfService;
		private boolean hasTimeOfService = false;

		private String GPSDate1;
		private boolean hasGPSDate1 = false;

		private String GPSTime1;
		private boolean hasGPSTime1 = false;

		private double GPSLat1;
		private boolean hasGPSLat1 = false;

		private double GPSLon1;
		private boolean hasGPSLon1 = false;

		private String GPSDate2;
		private boolean hasGPSDate2 = false;

		private String GPSTime2;
		private boolean hasGPSTime2 = false;

		private double GPSLat2;
		private boolean hasGPSLat2 = false;

		private double GPSLon2;
		private boolean hasGPSLon2 = false;

		private String GPSDate3;
		private boolean hasGPSDate3 = false;

		private String GPSTime3;
		private boolean hasGPSTime3 = false;

		private double GPSLat3;
		private boolean hasGPSLat3 = false;

		private double GPSLon3;
		private boolean hasGPSLon3 = false;

		private String PServ;
		private boolean hasPServ = false;

		private String CServ;
		private boolean hasCServ = false;

		private String CorpRecipient;
		private boolean hasCorpRecipient = false;

		private String CorpRecipientTitle;
		private boolean hasCorpRecipientTitle = false;

		private String PersonSeenSubstitute;
		private boolean hasPersonSeenSubstitute = false;

		private String PersonSeenDoeSubstitute;
		private boolean hasPersonSeenDoeSubstitute = false;

		private String PersonSeenPersonal;
		private boolean hasPersonSeenPersonal = false;

		private String PersonsNotSeenPersonal;
		private boolean hasPersonsNotSeenPersonal = false;

		private String DoorLock;
		private boolean hasDoorLock = false;

		private String OtherCommentsC;
		private boolean hasOtherCommentsC = false;

		private String OtherCommentsP;
		private boolean hasOtherCommentsP = false;

		private int FirstAttempt;
		private boolean hasFirstAttempt = false;

		private int SecondAttempt;
		private boolean hasSecondAttempt = false;

		private int ThirdAttempt;
		private boolean hasThirdAttempt = false;

		private int ServiceCompleted;
		private boolean hasServiceCompleted = false;

		private RelatedPersonMessages RelatedPersons;
		private boolean hasRelatedPersons = false;

		private RelatedBusinessMessages RelatedBusiness;
		private boolean hasRelatedBusiness = false;

		private String STND_ServiceType;
		private boolean hasSTND_ServiceType = false;

		private String STND_TYPE10DESC;
		private boolean hasSTND_TYPE10DESC = false;

		private String STND_INDEXNO;
		private boolean hasSTND_INDEXNO = false;

		private String STND_Court;
		private boolean hasSTND_Court = false;

		private String STND_County;
		private boolean hasSTND_County = false;

		private String STND_Plantiff;
		private boolean hasSTND_Plantiff = false;

		private String STND_Defendant;
		private boolean hasSTND_Defendant = false;

		private String STND_FULLNAME;
		private boolean hasSTND_FULLNAME = false;

		private String STND_ADDRESS;
		private boolean hasSTND_ADDRESS = false;

		private String STND_APT;
		private boolean hasSTND_APT = false;

		private String STND_CITY;
		private boolean hasSTND_CITY = false;

		private String STND_STATE;
		private boolean hasSTND_STATE = false;

		private String STND_ZIP;
		private boolean hasSTND_ZIP = false;

		private String LTBIZNAME;
		private boolean hasLTBIZNAME = false;

		private String PPSERVED1;
		private boolean hasPPSERVED1 = false;
		
		private String ServerLicenceNo;
		private boolean hasServerLicenceNo = false;
		
		private String GpsTimeOfService;
	    private  boolean hasGpsTimeOfService=false;
		
	    private  String GpsTimeOfFirstAttempt;
		private  boolean hasGpsTimeOfFirstAttempt=false;

		private  String GpsTimeOfSecondAttempt;
		private boolean hasGpsTimeOfSecondAttempt=false;
		
		private String GpsTimeOfThirdAttempt;
		private  boolean hasGpsTimeOfThirdAttempt=false;
//		public String DeviceId;
//		private boolean hasDeviceId;
//		private String DeviceId;
		
		private String producttype;
		private  boolean hasproducttype=false;
		
		private Builder() {
		}

		public Builder setP_Gender(final String P_Gender) {
			this.P_Gender = P_Gender;
			this.hasP_Gender = true;
			return this;
		}
		public Builder setP_Skincolor(final String P_Skincolor) {
			this.P_Skincolor = P_Skincolor;
			this.hasP_Skincolor = true;
			return this;
		}

		public Builder setP_Hair(final String P_Hair) {
			this.P_Hair = P_Hair;
			this.hasP_Hair = true;
			return this;
		}
		public Builder setP_Age(final String P_Age) {
			this.P_Age = P_Age;
			this.hasP_Age = true;
			return this;
		}
		public Builder setP_Height(final String P_Height) {
			this.P_Height = P_Height;
			this.hasP_Height = true;
			return this;
		}
		public Builder setP_Weight(final String P_Weight) {
			this.P_Weight = P_Weight;
			this.hasP_Weight = true;
			return this;
		}
		
		public Builder setC_Entry(final String C_Entry) {
			this.C_Entry = C_Entry;
			this.hasC_Entry = true;
			return this;
		}
		public Builder setC_Wall(final String C_Wall) {
			this.C_Wall = C_Wall;
			this.hasC_Wall= true;
			return this;
		}
		public Builder setC_Door(final String C_Door) {
			this.C_Door = C_Door;
			this.hasC_Door = true;
			return this;
		}
		public Builder setC_Floor(final String C_Floor) {
			this.C_Floor = C_Floor;
			this.hasC_Floor = true;
			return this;
		}
		public Builder setC_Lock(final String C_Lock) {
			this.C_Lock = C_Lock;
			this.hasC_Lock = true;
			return this;
		}
		
		//getDoorLock
	/*	public Builder setDoorLock(final String DoorLock) {
			this.DoorLock = DoorLock;
			this.hasDoorLock = true;
			return this;
		}*/
		
		
		public Builder setLegalDeliveryID(final String LegalDeliveryID) {
			this.LegalDeliveryID = LegalDeliveryID;
			this.hasLegalDeliveryID = true;
			return this;
		}
		
		public Builder setDeviceId(final String DeviceID) {
			this.DeviceID = DeviceID;
			this.hasDeviceId = true;
			return this;
		}

		public Builder setJobNo(final String JobNo) {
			this.JobNo = JobNo;
			this.hasJobNo = true;
			return this;
		}

		public Builder setInputDate(final String InputDate) {
			this.InputDate = InputDate;
			this.hasInputDate = true;
			return this;
		}

		public Builder setServiceType(final String ServiceType) {
			this.ServiceType = ServiceType;
			this.hasServiceType = true;
			return this;
		}

		public Builder setLTServiceType(final String LTServiceType) {
			this.LTServiceType = LTServiceType;
			this.hasLTServiceType = true;
			return this;
		}

		public Builder setClient(final String Client) {
			this.Client = Client;
			this.hasClient = true;
			return this;
		}

		public Builder setCaseNo(final String CaseNo) {
			this.CaseNo = CaseNo;
			this.hasCaseNo = true;
			return this;
		}

		public Builder setLTFullname(final String LTFullname) {
			this.LTFullname = LTFullname;
			this.hasLTFullname = true;
			return this;
		}

		public Builder setLTAddress(final String LTAddress) {
			this.LTAddress = LTAddress;
			this.hasLTAddress = true;
			return this;
		}

		public Builder setLTApt(final String LTApt) {
			this.LTApt = LTApt;
			this.hasLTApt = true;
			return this;
		}

		public Builder setLTCity(final String LTCity) {
			this.LTCity = LTCity;
			this.hasLTCity = true;
			return this;
		}

		public Builder setLTState(final String LTState) {
			this.LTState = LTState;
			this.hasLTState = true;
			return this;
		}

		public Builder setLTZip(final String LTZip) {
			this.LTZip = LTZip;
			this.hasLTZip = true;
			return this;
		}

		public Builder setServiceResult(final String ServiceResult) {
			this.ServiceResult = ServiceResult;
			this.hasServiceResult = true;
			return this;
		}

		public Builder setDateOfService(final String DateOfService) {
			this.DateOfService = DateOfService;
			this.hasDateOfService = true;
			return this;
		}

		public Builder setTimeOfService(final String TimeOfService) {
			this.TimeOfService = TimeOfService;
			this.hasTimeOfService = true;
			return this;
		}
		
		public Builder setGpsTimeOfService(final String GpsTimeOfService) {
			this.GpsTimeOfService= GpsTimeOfService;
			this.hasGpsTimeOfService = true;
			return this;
		}

		public Builder setGPSDate1(final String GPSDate1) {
			this.GPSDate1 = GPSDate1;
			this.hasGPSDate1 = true;
			return this;
		}

		public Builder setGPSTime1(final String GPSTime1) {
			this.GPSTime1 = GPSTime1;
			this.hasGPSTime1 = true;
			return this;
		}
		
		public Builder setGpsTimeOfFirstAttempt(final String GpsTimeOfFirstAttempt) {
			this.GpsTimeOfFirstAttempt = GpsTimeOfFirstAttempt;
			this.hasGpsTimeOfFirstAttempt = true;
			return this;
		}

		public Builder setGPSLat1(final double GPSLat1) {
			this.GPSLat1 = GPSLat1;
			this.hasGPSLat1 = true;
			return this;
		}

		public Builder setGPSLon1(final double GPSLon1) {
			this.GPSLon1 = GPSLon1;
			this.hasGPSLon1 = true;
			return this;
		}

		public Builder setGPSDate2(final String GPSDate2) {
			this.GPSDate2 = GPSDate2;
			this.hasGPSDate2 = true;
			return this;
		}

		public Builder setGPSTime2(final String GPSTime2) {
			this.GPSTime2 = GPSTime2;
			this.hasGPSTime2 = true;
			return this;
		}
		
		public Builder setGpsTimeOfSecondAttempt(final String GpsTimeOfSecondAttempt) {
			this.GpsTimeOfSecondAttempt = GpsTimeOfSecondAttempt;
			this.hasGpsTimeOfSecondAttempt = true;
			return this;
		}


		public Builder setGPSLat2(final double GPSLat2) {
			this.GPSLat2 = GPSLat2;
			this.hasGPSLat2 = true;
			return this;
		}

		public Builder setGPSLon2(final double GPSLon2) {
			this.GPSLon2 = GPSLon2;
			this.hasGPSLon2 = true;
			return this;
		}

		public Builder setGPSDate3(final String GPSDate3) {
			this.GPSDate3 = GPSDate3;
			this.hasGPSDate3 = true;
			return this;
		}

		public Builder setGPSTime3(final String GPSTime3) {
			this.GPSTime3 = GPSTime3;
			this.hasGPSTime3 = true;
			return this;
		}
		
		public Builder setGpsTimeOfThirdAttempt(final String GpsTimeOfThirdAttempt) {
			this.GpsTimeOfThirdAttempt = GpsTimeOfThirdAttempt;
			this.hasGpsTimeOfThirdAttempt = true;
			return this;
		}

		public Builder setGPSLat3(final double GPSLat3) {
			this.GPSLat3 = GPSLat3;
			this.hasGPSLat3 = true;
			return this;
		}

		public Builder setGPSLon3(final double GPSLon3) {
			this.GPSLon3 = GPSLon3;
			this.hasGPSLon3 = true;
			return this;
		}

		public Builder setPServ(final String PServ) {
			this.PServ = PServ;
			this.hasPServ = true;
			return this;
		}

		public Builder setCServ(final String CServ) {
			this.CServ = CServ;
			this.hasCServ = true;
			return this;
		}

		public Builder setCorpRecipient(final String CorpRecipient) {
			this.CorpRecipient = CorpRecipient;
			this.hasCorpRecipient = true;
			return this;
		}

		public Builder setCorpRecipientTitle(final String CorpRecipientTitle) {
			this.CorpRecipientTitle = CorpRecipientTitle;
			this.hasCorpRecipientTitle = true;
			return this;
		}

		public Builder setPersonSeenSubstitute(final String PersonSeenSubstitute) {
			this.PersonSeenSubstitute = PersonSeenSubstitute;
			this.hasPersonSeenSubstitute = true;
			return this;
		}

		public Builder setPersonSeenDoeSubstitute(final String PersonSeenDoeSubstitute) {
			this.PersonSeenDoeSubstitute = PersonSeenDoeSubstitute;
			this.hasPersonSeenDoeSubstitute = true;
			return this;
		}

		public Builder setPersonSeenPersonal(final String PersonSeenPersonal) {
			this.PersonSeenPersonal = PersonSeenPersonal;
			this.hasPersonSeenPersonal = true;
			return this;
		}

		public Builder setPersonsNotSeenPersonal(final String PersonsNotSeenPersonal) {
			this.PersonsNotSeenPersonal = PersonsNotSeenPersonal;
			this.hasPersonsNotSeenPersonal = true;
			return this;
		}

		public Builder setDoorLock(final String DoorLock) {
			this.DoorLock = DoorLock;
			this.hasDoorLock = true;
			return this;
		}

		public Builder setOtherCommentsC(final String OtherCommentsC) {
			this.OtherCommentsC = OtherCommentsC;
			this.hasOtherCommentsC = true;
			return this;
		}

		public Builder setOtherCommentsP(final String OtherCommentsP) {
			this.OtherCommentsP = OtherCommentsP;
			this.hasOtherCommentsP = true;
			return this;
		}

		public Builder setFirstAttempt(final int FirstAttempt) {
			this.FirstAttempt = FirstAttempt;
			this.hasFirstAttempt = true;
			return this;
		}

		public Builder setSecondAttempt(final int SecondAttempt) {
			this.SecondAttempt = SecondAttempt;
			this.hasSecondAttempt = true;
			return this;
		}

		public Builder setThirdAttempt(final int ThirdAttempt) {
			this.ThirdAttempt = ThirdAttempt;
			this.hasThirdAttempt = true;
			return this;
		}

		public Builder setServiceCompleted(final int ServiceCompleted) {
			this.ServiceCompleted = ServiceCompleted;
			this.hasServiceCompleted = true;
			return this;
		}

		public Builder setRelatedPersons(final RelatedPersonMessages RelatedPersons) {
			this.RelatedPersons = RelatedPersons;
			this.hasRelatedPersons = true;
			return this;
		}

		public Builder setRelatedBusiness(final RelatedBusinessMessages RelatedBusiness) {
			this.RelatedBusiness = RelatedBusiness;
			this.hasRelatedBusiness = true;
			return this;
		}

		public Builder setSTND_ServiceType(final String STND_ServiceType) {
			this.STND_ServiceType = STND_ServiceType;
			this.hasSTND_ServiceType = true;
			return this;
		}

		public Builder setSTND_TYPE10DESC(final String STND_TYPE10DESC) {
			this.STND_TYPE10DESC = STND_TYPE10DESC;
			this.hasSTND_TYPE10DESC = true;
			return this;
		}

		public Builder setSTND_INDEXNO(final String STND_INDEXNO) {
			this.STND_INDEXNO = STND_INDEXNO;
			this.hasSTND_INDEXNO = true;
			return this;
		}

		public Builder setSTND_Court(final String STND_Court) {
			this.STND_Court = STND_Court;
			this.hasSTND_Court = true;
			return this;
		}

		public Builder setSTND_County(final String STND_County) {
			this.STND_County = STND_County;
			this.hasSTND_County = true;
			return this;
		}

		public Builder setSTND_Plantiff(final String STND_Plantiff) {
			this.STND_Plantiff = STND_Plantiff;
			this.hasSTND_Plantiff = true;
			return this;
		}

		public Builder setSTND_Defendant(final String STND_Defendant) {
			this.STND_Defendant = STND_Defendant;
			this.hasSTND_Defendant = true;
			return this;
		}

		public Builder setSTND_FULLNAME(final String STND_FULLNAME) {
			this.STND_FULLNAME = STND_FULLNAME;
			this.hasSTND_FULLNAME = true;
			return this;
		}

		public Builder setSTND_ADDRESS(final String STND_ADDRESS) {
			this.STND_ADDRESS = STND_ADDRESS;
			this.hasSTND_ADDRESS = true;
			return this;
		}

		public Builder setSTND_APT(final String STND_APT) {
			this.STND_APT = STND_APT;
			this.hasSTND_APT = true;
			return this;
		}

		public Builder setSTND_CITY(final String STND_CITY) {
			this.STND_CITY = STND_CITY;
			this.hasSTND_CITY = true;
			return this;
		}

		public Builder setSTND_STATE(final String STND_STATE) {
			this.STND_STATE = STND_STATE;
			this.hasSTND_STATE = true;
			return this;
		}

		public Builder setSTND_ZIP(final String STND_ZIP) {
			this.STND_ZIP = STND_ZIP;
			this.hasSTND_ZIP = true;
			return this;
		}

		public Builder setLTBIZNAME(final String LTBIZNAME) {
			this.LTBIZNAME = LTBIZNAME;
			this.hasLTBIZNAME = true;
			return this;
		}

		public Builder setPPSERVED1(final String PPSERVED1) {
			this.PPSERVED1 = PPSERVED1;
			this.hasPPSERVED1 = true;
			return this;
		}
		
		public Builder setServerLicenceNo(final String ServerLicenceNo) {
			this.ServerLicenceNo = ServerLicenceNo;
			this.hasServerLicenceNo = true;
			return this;
		}		
		
		public Builder setproducttype(final String producttype) {
			this.producttype = producttype;
			this.hasproducttype = true;
			return this;
		}	
		
		
		public LegalDeliveryMessage build() {
			return new LegalDeliveryMessage(this);
		}

		public void getC_Entry(String c_Entry) {
			// TODO Auto-generated method stub
			
		}

		public void getC_Door(String c_Door) {
			// TODO Auto-generated method stub
			
		}
	}

	public String getP_Gender() {
		return P_Gender;
	}
	public String getLegalDeliveryID() {
		return LegalDeliveryID;
	}
	
	public String getDeviceId() {
		return DeviceID;
	}

	public String getJobNo() {
		return JobNo;
	}

	public boolean hasJobNo() {
		return hasJobNo;
	}

	public String getInputDate() {
		return InputDate;
	}

	public boolean hasInputDate() {
		return hasInputDate;
	}

	public String getServiceType() {
		return ServiceType;
	}

	public boolean hasServiceType() {
		return hasServiceType;
	}

	public String getLTServiceType() {
		return LTServiceType;
	}

	public boolean hasLTServiceType() {
		return hasLTServiceType;
	}

	public String getClient() {
		return Client;
	}

	public boolean hasClient() {
		return hasClient;
	}

	public String getCaseNo() {
		return CaseNo;
	}

	public boolean hasCaseNo() {
		return hasCaseNo;
	}

	public String getLTFullname() {
		return LTFullname;
	}

	public boolean hasLTFullname() {
		return hasLTFullname;
	}

	public String getLTAddress() {
		return LTAddress;
	}

	public boolean hasLTAddress() {
		return hasLTAddress;
	}

	public String getLTApt() {
		return LTApt;
	}

	public boolean hasLTApt() {
		return hasLTApt;
	}

	public String getLTCity() {
		return LTCity;
	}

	public boolean hasLTCity() {
		return hasLTCity;
	}

	public String getLTState() {
		return LTState;
	}

	public boolean hasLTState() {
		return hasLTState;
	}

	public String getLTZip() {
		return LTZip;
	}

	public boolean hasLTZip() {
		return hasLTZip;
	}

	public String getServiceResult() {
		return ServiceResult;
	}

	public boolean hasServiceResult() {
		return hasServiceResult;
	}

	public String getDateOfService() {
		return DateOfService;
	}

	public boolean hasDateOfService() {
		return hasDateOfService;
	}

	public String getTimeOfService() {
		return TimeOfService;
	}

	public boolean hasTimeOfService() {
		return hasTimeOfService;
	}
	
	public String getGpsTimeOfService() {
		return GpsTimeOfService;
	}

	public boolean hasGpsTimeOfService() {
		return hasGpsTimeOfService;
	}
	


	public String getGPSDate1() {
		return GPSDate1;
	}

	public boolean hasGPSDate1() {
		return hasGPSDate1;
	}

	public String getGPSTime1() {
		return GPSTime1;
	}

	public boolean hasGPSTime1() {
		return hasGPSTime1;
	}

	public String getGpsTimeOfFirstAttempt() {
		return GpsTimeOfFirstAttempt;
	}

	public boolean hasGpsTimeOfFirstAttempt() {
		return hasGpsTimeOfFirstAttempt;
	}

	
	public double getGPSLat1() {
		return GPSLat1;
	}

	public boolean hasGPSLat1() {
		return hasGPSLat1;
	}

	public double getGPSLon1() {
		return GPSLon1;
	}

	public boolean hasGPSLon1() {
		return hasGPSLon1;
	}

	public String getGPSDate2() {
		return GPSDate2;
	}

	public boolean hasGPSDate2() {
		return hasGPSDate2;
	}

	public String getGPSTime2() {
		return GPSTime2;
	}

	public boolean hasGPSTime2() {
		return hasGPSTime2;
	}


	public String getGpsTimeOfSecondAttempt() {
		return GpsTimeOfSecondAttempt;
	}

	public boolean hasGpsTimeOfSecondAttempt() {
		return hasGpsTimeOfSecondAttempt;
	}
	
	public double getGPSLat2() {
		return GPSLat2;
	}

	public boolean hasGPSLat2() {
		return hasGPSLat2;
	}

	public double getGPSLon2() {
		return GPSLon2;
	}

	public boolean hasGPSLon2() {
		return hasGPSLon2;
	}

	public String getGPSDate3() {
		return GPSDate3;
	}

	public boolean hasGPSDate3() {
		return hasGPSDate3;
	}

	public String getGPSTime3() {
		return GPSTime3;
	}

	public boolean hasGPSTime3() {
		return hasGPSTime3;
	}

	public String getGpsTimeOfThirdAttempt() {
		return GpsTimeOfThirdAttempt;
	}

	public boolean hasGpsTimeOfThirdAttempt() {
		return hasGpsTimeOfThirdAttempt;
	}
	
	public double getGPSLat3() {
		return GPSLat3;
	}

	public boolean hasGPSLat3() {
		return hasGPSLat3;
	}

	public double getGPSLon3() {
		return GPSLon3;
	}

	public boolean hasGPSLon3() {
		return hasGPSLon3;
	}

	public String getPServ() {
		return PServ;
	}

	public boolean hasPServ() {
		return hasPServ;
	}

	public String getCServ() {
		return CServ;
	}

	public boolean hasCServ() {
		return hasCServ;
	}

	public String getCorpRecipient() {
		return CorpRecipient;
	}

	public boolean hasCorpRecipient() {
		return hasCorpRecipient;
	}

	public String getCorpRecipientTitle() {
		return CorpRecipientTitle;
	}

	public boolean hasCorpRecipientTitle() {
		return hasCorpRecipientTitle;
	}

	public String getPersonSeenSubstitute() {
		return PersonSeenSubstitute;
	}

	public boolean hasPersonSeenSubstitute() {
		return hasPersonSeenSubstitute;
	}

	public String getPersonSeenDoeSubstitute() {
		return PersonSeenDoeSubstitute;
	}

	public boolean hasPersonSeenDoeSubstitute() {
		return hasPersonSeenDoeSubstitute;
	}

	public String getPersonSeenPersonal() {
		return PersonSeenPersonal;
	}

	public boolean hasPersonSeenPersonal() {
		return hasPersonSeenPersonal;
	}

	public String getPersonsNotSeenPersonal() {
		return PersonsNotSeenPersonal;
	}

	public boolean hasPersonsNotSeenPersonal() {
		return hasPersonsNotSeenPersonal;
	}

	public String getDoorLock() {
		return DoorLock;
	}

	public boolean hasDoorLock() {
		return hasDoorLock;
	}

	public String getOtherCommentsC() {
		return OtherCommentsC;
	}

	public boolean hasOtherCommentsC() {
		return hasOtherCommentsC;
	}

	public String getOtherCommentsP() {
		return OtherCommentsP;
	}

	public boolean hasOtherCommentsP() {
		return hasOtherCommentsP;
	}

	public int getFirstAttempt() {
		return FirstAttempt;
	}

	public int getSecondAttempt() {
		return SecondAttempt;
	}

	public int getThirdAttempt() {
		return ThirdAttempt;
	}

	public int getServiceCompleted() {
		return ServiceCompleted;
	}

	public RelatedPersonMessages getRelatedPersons() {
		return RelatedPersons;
	}

	public boolean hasRelatedPersons() {
		return hasRelatedPersons;
	}

	public RelatedBusinessMessages getRelatedBusiness() {
		return RelatedBusiness;
	}

	public boolean hasRelatedBusiness() {
		return hasRelatedBusiness;
	}

	public String getSTND_ServiceType() {
		return STND_ServiceType;
	}

	public boolean hasSTND_ServiceType() {
		return hasSTND_ServiceType;
	}

	public String getSTND_TYPE10DESC() {
		return STND_TYPE10DESC;
	}

	public boolean hasSTND_TYPE10DESC() {
		return hasSTND_TYPE10DESC;
	}

	public String getSTND_INDEXNO() {
		return STND_INDEXNO;
	}

	public boolean hasSTND_INDEXNO() {
		return hasSTND_INDEXNO;
	}

	public String getSTND_Court() {
		return STND_Court;
	}

	public boolean hasSTND_Court() {
		return hasSTND_Court;
	}

	public String getSTND_County() {
		return STND_County;
	}

	public boolean hasSTND_County() {
		return hasSTND_County;
	}

	public String getSTND_Plantiff() {
		return STND_Plantiff;
	}

	public boolean hasSTND_Plantiff() {
		return hasSTND_Plantiff;
	}

	public String getSTND_Defendant() {
		return STND_Defendant;
	}

	public boolean hasSTND_Defendant() {
		return hasSTND_Defendant;
	}

	public String getSTND_FULLNAME() {
		return STND_FULLNAME;
	}

	public boolean hasSTND_FULLNAME() {
		return hasSTND_FULLNAME;
	}

	public String getSTND_ADDRESS() {
		return STND_ADDRESS;
	}

	public boolean hasSTND_ADDRESS() {
		return hasSTND_ADDRESS;
	}

	public String getSTND_APT() {
		return STND_APT;
	}

	public boolean hasSTND_APT() {
		return hasSTND_APT;
	}

	public String getSTND_CITY() {
		return STND_CITY;
	}

	public boolean hasSTND_CITY() {
		return hasSTND_CITY;
	}

	public String getSTND_STATE() {
		return STND_STATE;
	}

	public boolean hasSTND_STATE() {
		return hasSTND_STATE;
	}

	public String getSTND_ZIP() {
		return STND_ZIP;
	}

	public boolean hasSTND_ZIP() {
		return hasSTND_ZIP;
	}

	public String getLTBIZNAME() {
		return LTBIZNAME;
	}

	public boolean hasLTBIZNAME() {
		return hasLTBIZNAME;
	}

	public String getPPSERVED1() {
		return PPSERVED1;
	}

	public boolean hasPPSERVED1() {
		return hasPPSERVED1;
	}

	public String getServerLicenceNo() {
		return ServerLicenceNo;
	}

	public boolean hasServerLicenceNo() {
		return hasServerLicenceNo;
	}	
	

	public String getproducttype() {
		return producttype;
	}

	public boolean hasproducttype() {
		return hasproducttype;
	}	
	
	public String toString() {
		final String TAB = "   ";
		String retValue = "";
		retValue += this.getClass().getName() + "(";
		retValue += "LegalDeliveryID = " + this.LegalDeliveryID + TAB;
		if(hasJobNo) retValue += "JobNo = " + this.JobNo + TAB;
		if(hasInputDate) retValue += "InputDate = " + this.InputDate + TAB;
		if(hasServiceType) retValue += "ServiceType = " + this.ServiceType + TAB;
		if(hasLTServiceType) retValue += "LTServiceType = " + this.LTServiceType + TAB;
		if(hasClient) retValue += "Client = " + this.Client + TAB;
		if(hasCaseNo) retValue += "CaseNo = " + this.CaseNo + TAB;
		if(hasLTFullname) retValue += "LTFullname = " + this.LTFullname + TAB;
		if(hasLTAddress) retValue += "LTAddress = " + this.LTAddress + TAB;
		if(hasLTApt) retValue += "LTApt = " + this.LTApt + TAB;
		if(hasLTCity) retValue += "LTCity = " + this.LTCity + TAB;
		if(hasLTState) retValue += "LTState = " + this.LTState + TAB;
		if(hasLTZip) retValue += "LTZip = " + this.LTZip + TAB;
		if(hasServiceResult) retValue += "ServiceResult = " + this.ServiceResult + TAB;
		if(hasDateOfService) retValue += "DateOfService = " + this.DateOfService + TAB;
		if(hasTimeOfService) retValue += "TimeOfService = " + this.TimeOfService + TAB;
		if(hasGPSDate1) retValue += "GPSDate1 = " + this.GPSDate1 + TAB;
		if(hasGPSTime1) retValue += "GPSTime1 = " + this.GPSTime1 + TAB;
		if(hasGPSLat1) retValue += "GPSLat1 = " + this.GPSLat1 + TAB;
		if(hasGPSLon1) retValue += "GPSLon1 = " + this.GPSLon1 + TAB;
		if(hasGPSDate2) retValue += "GPSDate2 = " + this.GPSDate2 + TAB;
		if(hasGPSTime2) retValue += "GPSTime2 = " + this.GPSTime2 + TAB;
		if(hasGPSLat2) retValue += "GPSLat2 = " + this.GPSLat2 + TAB;
		if(hasGPSLon2) retValue += "GPSLon2 = " + this.GPSLon2 + TAB;
		if(hasGPSDate3) retValue += "GPSDate3 = " + this.GPSDate3 + TAB;
		if(hasGPSTime3) retValue += "GPSTime3 = " + this.GPSTime3 + TAB;
		if(hasGPSLat3) retValue += "GPSLat3 = " + this.GPSLat3 + TAB;
		if(hasGPSLon3) retValue += "GPSLon3 = " + this.GPSLon3 + TAB;
		if(hasPServ) retValue += "PServ = " + this.PServ + TAB;
		if(hasCServ) retValue += "CServ = " + this.CServ + TAB;
		if(hasCorpRecipient) retValue += "CorpRecipient = " + this.CorpRecipient + TAB;
		if(hasCorpRecipientTitle) retValue += "CorpRecipientTitle = " + this.CorpRecipientTitle + TAB;
		if(hasPersonSeenSubstitute) retValue += "PersonSeenSubstitute = " + this.PersonSeenSubstitute + TAB;
		if(hasPersonSeenDoeSubstitute) retValue += "PersonSeenDoeSubstitute = " + this.PersonSeenDoeSubstitute + TAB;
		if(hasPersonSeenPersonal) retValue += "PersonSeenPersonal = " + this.PersonSeenPersonal + TAB;
		if(hasPersonsNotSeenPersonal) retValue += "PersonsNotSeenPersonal = " + this.PersonsNotSeenPersonal + TAB;
		if(hasDoorLock) retValue += "DoorLock = " + this.DoorLock + TAB;
		if(hasOtherCommentsC) retValue += "OtherCommentsC = " + this.OtherCommentsC + TAB;
		if(hasOtherCommentsP) retValue += "OtherCommentsP = " + this.OtherCommentsP + TAB;
		retValue += "FirstAttempt = " + this.FirstAttempt + TAB;
		retValue += "SecondAttempt = " + this.SecondAttempt + TAB;
		retValue += "ThirdAttempt = " + this.ThirdAttempt + TAB;
		retValue += "ServiceCompleted = " + this.ServiceCompleted + TAB;
		if(hasRelatedPersons) retValue += "RelatedPersons = " + this.RelatedPersons + TAB;
		if(hasRelatedBusiness) retValue += "RelatedBusiness = " + this.RelatedBusiness + TAB;
		if(hasSTND_ServiceType) retValue += "STND_ServiceType = " + this.STND_ServiceType + TAB;
		if(hasSTND_TYPE10DESC) retValue += "STND_TYPE10DESC = " + this.STND_TYPE10DESC + TAB;
		if(hasSTND_INDEXNO) retValue += "STND_INDEXNO = " + this.STND_INDEXNO + TAB;
		if(hasSTND_Court) retValue += "STND_Court = " + this.STND_Court + TAB;
		if(hasSTND_County) retValue += "STND_County = " + this.STND_County + TAB;
		if(hasSTND_Plantiff) retValue += "STND_Plantiff = " + this.STND_Plantiff + TAB;
		if(hasSTND_Defendant) retValue += "STND_Defendant = " + this.STND_Defendant + TAB;
		if(hasSTND_FULLNAME) retValue += "STND_FULLNAME = " + this.STND_FULLNAME + TAB;
		if(hasSTND_ADDRESS) retValue += "STND_ADDRESS = " + this.STND_ADDRESS + TAB;
		if(hasSTND_APT) retValue += "STND_APT = " + this.STND_APT + TAB;
		if(hasSTND_CITY) retValue += "STND_CITY = " + this.STND_CITY + TAB;
		if(hasSTND_STATE) retValue += "STND_STATE = " + this.STND_STATE + TAB;
		if(hasSTND_ZIP) retValue += "STND_ZIP = " + this.STND_ZIP + TAB;
		if(hasLTBIZNAME) retValue += "LTBIZNAME = " + this.LTBIZNAME + TAB;
		if(hasPPSERVED1) retValue += "PPSERVED1 = " + this.PPSERVED1 + TAB;
		if(hasServerLicenceNo) retValue += "ServerLicenceNo = " + this.ServerLicenceNo + TAB;
		if(hasGpsTimeOfService) retValue += "GpsTimeOfService = " + this.GpsTimeOfService + TAB;
		if(hasGpsTimeOfFirstAttempt) retValue += "GpsTimeOfFirstAttempt = " + this.GpsTimeOfFirstAttempt + TAB;
	    if(hasGpsTimeOfSecondAttempt) retValue += "GpsTimeOfSecondAttempt = " + this.GpsTimeOfSecondAttempt + TAB;
		if(hasGpsTimeOfThirdAttempt) retValue += "GpsTimeOfThirdAttempt = " + this.GpsTimeOfThirdAttempt + TAB;
		if(hasDeviceId) retValue += "DeviceID = " + this.DeviceID + TAB;
		if(hasproducttype) retValue += "producttype = " + this.producttype + TAB;
		retValue += ")";

		return retValue;
	}

	// Override
	public int computeSize() {
		int totalSize = 0;
		totalSize += ComputeSizeUtil.computeStringSize(fieldNumberLegalDeliveryID, LegalDeliveryID);
		if(hasJobNo) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberJobNo, JobNo);
		if(hasInputDate) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberInputDate, InputDate);
		if(hasServiceType) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberServiceType, ServiceType);
		if(hasLTServiceType) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberLTServiceType, LTServiceType);
		if(hasClient) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberClient, Client);
		if(hasCaseNo) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberCaseNo, CaseNo);
		if(hasLTFullname) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberLTFullname, LTFullname);
		if(hasLTAddress) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberLTAddress, LTAddress);
		if(hasLTApt) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberLTApt, LTApt);
		if(hasLTCity) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberLTCity, LTCity);
		if(hasLTState) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberLTState, LTState);
		if(hasLTZip) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberLTZip, LTZip);
		if(hasServiceResult) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberServiceResult, ServiceResult);
		if(hasDateOfService) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberDateOfService, DateOfService);
		if(hasTimeOfService) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberTimeOfService, TimeOfService);
		if(hasGPSDate1) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberGPSDate1, GPSDate1);
		if(hasGPSTime1) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberGPSTime1, GPSTime1);
		if(hasGPSLat1) totalSize += ComputeSizeUtil.computeDoubleSize(fieldNumberGPSLat1, GPSLat1);
		if(hasGPSLon1) totalSize += ComputeSizeUtil.computeDoubleSize(fieldNumberGPSLon1, GPSLon1);
		if(hasGPSDate2) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberGPSDate2, GPSDate2);
		if(hasGPSTime2) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberGPSTime2, GPSTime2);
		if(hasGPSLat2) totalSize += ComputeSizeUtil.computeDoubleSize(fieldNumberGPSLat2, GPSLat2);
		if(hasGPSLon2) totalSize += ComputeSizeUtil.computeDoubleSize(fieldNumberGPSLon2, GPSLon2);
		if(hasGPSDate3) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberGPSDate3, GPSDate3);
		if(hasGPSTime3) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberGPSTime3, GPSTime3);
		if(hasGPSLat3) totalSize += ComputeSizeUtil.computeDoubleSize(fieldNumberGPSLat3, GPSLat3);
		if(hasGPSLon3) totalSize += ComputeSizeUtil.computeDoubleSize(fieldNumberGPSLon3, GPSLon3);
		if(hasPServ) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberPServ, PServ);
		if(hasCServ) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberCServ, CServ);
		if(hasCorpRecipient) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberCorpRecipient, CorpRecipient);
		if(hasCorpRecipientTitle) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberCorpRecipientTitle, CorpRecipientTitle);
		if(hasPersonSeenSubstitute) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberPersonSeenSubstitute, PersonSeenSubstitute);
		if(hasPersonSeenDoeSubstitute) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberPersonSeenDoeSubstitute, PersonSeenDoeSubstitute);
		if(hasPersonSeenPersonal) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberPersonSeenPersonal, PersonSeenPersonal);
		if(hasPersonsNotSeenPersonal) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberPersonsNotSeenPersonal, PersonsNotSeenPersonal);
		if(hasDoorLock) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberDoorLock, DoorLock);
		if(hasOtherCommentsC) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberOtherCommentsC, OtherCommentsC);
		if(hasOtherCommentsP) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberOtherCommentsP, OtherCommentsP);
		totalSize += ComputeSizeUtil.computeIntSize(fieldNumberFirstAttempt, FirstAttempt);
		totalSize += ComputeSizeUtil.computeIntSize(fieldNumberSecondAttempt, SecondAttempt);
		totalSize += ComputeSizeUtil.computeIntSize(fieldNumberThirdAttempt, ThirdAttempt);
		totalSize += ComputeSizeUtil.computeIntSize(fieldNumberServiceCompleted, ServiceCompleted);
		if(hasSTND_ServiceType) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberSTND_ServiceType, STND_ServiceType);
		if(hasSTND_TYPE10DESC) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberSTND_TYPE10DESC, STND_TYPE10DESC);
		if(hasSTND_INDEXNO) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberSTND_INDEXNO, STND_INDEXNO);
		if(hasSTND_Court) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberSTND_Court, STND_Court);
		if(hasSTND_County) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberSTND_County, STND_County);
		if(hasSTND_Plantiff) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberSTND_Plantiff, STND_Plantiff);
		if(hasSTND_Defendant) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberSTND_Defendant, STND_Defendant);
		if(hasSTND_FULLNAME) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberSTND_FULLNAME, STND_FULLNAME);
		if(hasSTND_ADDRESS) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberSTND_ADDRESS, STND_ADDRESS);
		if(hasSTND_APT) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberSTND_APT, STND_APT);
		if(hasSTND_CITY) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberSTND_CITY, STND_CITY);
		if(hasSTND_STATE) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberSTND_STATE, STND_STATE);
		if(hasSTND_ZIP) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberSTND_ZIP, STND_ZIP);
		if(hasLTBIZNAME) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberLTBIZNAME, LTBIZNAME);
		if(hasPPSERVED1) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberPPSERVED1, PPSERVED1);
		if(hasServerLicenceNo) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberServerLicenceNo, ServerLicenceNo);
		if(hasGpsTimeOfService) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberGpsTimeOfService, GpsTimeOfService);
		if(hasGpsTimeOfFirstAttempt) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberGpsTimeOfFirstAttempt, GpsTimeOfFirstAttempt);
	    if(hasGpsTimeOfSecondAttempt) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberGpsTimeOfSecondAttempt,GpsTimeOfSecondAttempt);
     	if(hasGpsTimeOfThirdAttempt) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberGpsTimeOfThirdAttempt, GpsTimeOfThirdAttempt);
     	if(hasDeviceId) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberDeviceId, DeviceID);
     	if(hasproducttype) totalSize += ComputeSizeUtil.computeStringSize(fieldNumberproducttype, producttype);
     	
     	totalSize += computeNestedMessageSize();

		return totalSize;
	}

	private int computeNestedMessageSize() {
		int messageSize = 0;
		if(hasRelatedPersons) messageSize += ComputeSizeUtil.computeMessageSize(fieldNumberRelatedPersons, RelatedPersons.computeSize());
		if(hasRelatedBusiness) messageSize += ComputeSizeUtil.computeMessageSize(fieldNumberRelatedBusiness, RelatedBusiness.computeSize());

		return messageSize;
	}

	// Override
	public void writeFields(final OutputWriter writer) throws IOException {
		writer.writeString(fieldNumberLegalDeliveryID, LegalDeliveryID);
		if(hasJobNo) writer.writeString(fieldNumberJobNo, JobNo);
		if(hasInputDate) writer.writeString(fieldNumberInputDate, InputDate);
		if(hasServiceType) writer.writeString(fieldNumberServiceType, ServiceType);
		if(hasLTServiceType) writer.writeString(fieldNumberLTServiceType, LTServiceType);
		if(hasClient) writer.writeString(fieldNumberClient, Client);
		if(hasCaseNo) writer.writeString(fieldNumberCaseNo, CaseNo);
		if(hasLTFullname) writer.writeString(fieldNumberLTFullname, LTFullname);
		if(hasLTAddress) writer.writeString(fieldNumberLTAddress, LTAddress);
		if(hasLTApt) writer.writeString(fieldNumberLTApt, LTApt);
		if(hasLTCity) writer.writeString(fieldNumberLTCity, LTCity);
		if(hasLTState) writer.writeString(fieldNumberLTState, LTState);
		if(hasLTZip) writer.writeString(fieldNumberLTZip, LTZip);
		if(hasServiceResult) writer.writeString(fieldNumberServiceResult, ServiceResult);
		if(hasDateOfService) writer.writeString(fieldNumberDateOfService, DateOfService);
		if(hasTimeOfService) writer.writeString(fieldNumberTimeOfService, TimeOfService);
		if(hasGPSDate1) writer.writeString(fieldNumberGPSDate1, GPSDate1);
		if(hasGPSTime1) writer.writeString(fieldNumberGPSTime1, GPSTime1);
		if(hasGPSLat1) writer.writeDouble(fieldNumberGPSLat1, GPSLat1);
		if(hasGPSLon1) writer.writeDouble(fieldNumberGPSLon1, GPSLon1);
		if(hasGPSDate2) writer.writeString(fieldNumberGPSDate2, GPSDate2);
		if(hasGPSTime2) writer.writeString(fieldNumberGPSTime2, GPSTime2);
		if(hasGPSLat2) writer.writeDouble(fieldNumberGPSLat2, GPSLat2);
		if(hasGPSLon2) writer.writeDouble(fieldNumberGPSLon2, GPSLon2);
		if(hasGPSDate3) writer.writeString(fieldNumberGPSDate3, GPSDate3);
		if(hasGPSTime3) writer.writeString(fieldNumberGPSTime3, GPSTime3);
		if(hasGPSLat3) writer.writeDouble(fieldNumberGPSLat3, GPSLat3);
		if(hasGPSLon3) writer.writeDouble(fieldNumberGPSLon3, GPSLon3);
		if(hasPServ) writer.writeString(fieldNumberPServ, PServ);
		if(hasCServ) writer.writeString(fieldNumberCServ, CServ);
		if(hasCorpRecipient) writer.writeString(fieldNumberCorpRecipient, CorpRecipient);
		if(hasCorpRecipientTitle) writer.writeString(fieldNumberCorpRecipientTitle, CorpRecipientTitle);
		if(hasPersonSeenSubstitute) writer.writeString(fieldNumberPersonSeenSubstitute, PersonSeenSubstitute);
		if(hasPersonSeenDoeSubstitute) writer.writeString(fieldNumberPersonSeenDoeSubstitute, PersonSeenDoeSubstitute);
		if(hasPersonSeenPersonal) writer.writeString(fieldNumberPersonSeenPersonal, PersonSeenPersonal);
		if(hasPersonsNotSeenPersonal) writer.writeString(fieldNumberPersonsNotSeenPersonal, PersonsNotSeenPersonal);
		if(hasDoorLock) writer.writeString(fieldNumberDoorLock, DoorLock);
		if(hasOtherCommentsC) writer.writeString(fieldNumberOtherCommentsC, OtherCommentsC);
		if(hasOtherCommentsP) writer.writeString(fieldNumberOtherCommentsP, OtherCommentsP);
		writer.writeInt(fieldNumberFirstAttempt, FirstAttempt);
		writer.writeInt(fieldNumberSecondAttempt, SecondAttempt);
		writer.writeInt(fieldNumberThirdAttempt, ThirdAttempt);
		writer.writeInt(fieldNumberServiceCompleted, ServiceCompleted);
		if(hasRelatedPersons) { writer.writeMessage(fieldNumberRelatedPersons, RelatedPersons.computeSize()); RelatedPersons.writeFields(writer); }
		if(hasRelatedBusiness) { writer.writeMessage(fieldNumberRelatedBusiness, RelatedBusiness.computeSize()); RelatedBusiness.writeFields(writer); }
		if(hasSTND_ServiceType) writer.writeString(fieldNumberSTND_ServiceType, STND_ServiceType);
		if(hasSTND_TYPE10DESC) writer.writeString(fieldNumberSTND_TYPE10DESC, STND_TYPE10DESC);
		if(hasSTND_INDEXNO) writer.writeString(fieldNumberSTND_INDEXNO, STND_INDEXNO);
		if(hasSTND_Court) writer.writeString(fieldNumberSTND_Court, STND_Court);
		if(hasSTND_County) writer.writeString(fieldNumberSTND_County, STND_County);
		if(hasSTND_Plantiff) writer.writeString(fieldNumberSTND_Plantiff, STND_Plantiff);
		if(hasSTND_Defendant) writer.writeString(fieldNumberSTND_Defendant, STND_Defendant);
		if(hasSTND_FULLNAME) writer.writeString(fieldNumberSTND_FULLNAME, STND_FULLNAME);
		if(hasSTND_ADDRESS) writer.writeString(fieldNumberSTND_ADDRESS, STND_ADDRESS);
		if(hasSTND_APT) writer.writeString(fieldNumberSTND_APT, STND_APT);
		if(hasSTND_CITY) writer.writeString(fieldNumberSTND_CITY, STND_CITY);
		if(hasSTND_STATE) writer.writeString(fieldNumberSTND_STATE, STND_STATE);
		if(hasSTND_ZIP) writer.writeString(fieldNumberSTND_ZIP, STND_ZIP);
		if(hasLTBIZNAME) writer.writeString(fieldNumberLTBIZNAME, LTBIZNAME);
		if(hasPPSERVED1) writer.writeString(fieldNumberPPSERVED1, PPSERVED1);
		if(hasServerLicenceNo) writer.writeString(fieldNumberServerLicenceNo, ServerLicenceNo);	
		if(hasGpsTimeOfService) writer.writeString(fieldNumberGpsTimeOfService, GpsTimeOfService);
		if(hasGpsTimeOfFirstAttempt) writer.writeString(fieldNumberGpsTimeOfFirstAttempt, GpsTimeOfFirstAttempt);
	    if(hasGpsTimeOfSecondAttempt) writer.writeString(fieldNumberGpsTimeOfSecondAttempt,GpsTimeOfSecondAttempt);
     	if(hasGpsTimeOfThirdAttempt) writer.writeString(fieldNumberGpsTimeOfThirdAttempt, GpsTimeOfThirdAttempt);
     	if(hasDeviceId) writer.writeString(fieldNumberDeviceId, DeviceID);
		
     	if(hasproducttype) writer.writeString(fieldNumberproducttype, producttype);
     	
		writer.writeData();
	}

	static LegalDeliveryMessage parseFields(final InputReader reader) throws IOException {
		int nextFieldNumber = getNextFieldNumber(reader);
		final LegalDeliveryMessage.Builder builder = LegalDeliveryMessage.newBuilder();

		while (nextFieldNumber > 0) {
			if(!populateBuilderWithField(reader, builder, nextFieldNumber)) {
				reader.getPreviousTagDataTypeAndReadContent();
			}
			nextFieldNumber = getNextFieldNumber(reader);
		}

		return builder.build();
	}

	static int getNextFieldNumber(final InputReader reader) throws IOException {
		return reader.getNextFieldNumber();
	}

	@SuppressWarnings("rawtypes")
	static boolean populateBuilderWithField(final InputReader reader, final Builder builder, final int fieldNumber) throws IOException {
		boolean fieldFound = true;
		switch (fieldNumber) {
			case fieldNumberLegalDeliveryID:
				builder.setLegalDeliveryID(reader.readString(fieldNumber));
				break;
			case fieldNumberJobNo:
				builder.setJobNo(reader.readString(fieldNumber));
				break;
			case fieldNumberInputDate:
				builder.setInputDate(reader.readString(fieldNumber));
				break;
			case fieldNumberServiceType:
				builder.setServiceType(reader.readString(fieldNumber));
				break;
			case fieldNumberLTServiceType:
				builder.setLTServiceType(reader.readString(fieldNumber));
				break;
			case fieldNumberClient:
				builder.setClient(reader.readString(fieldNumber));
				break;
			case fieldNumberCaseNo:
				builder.setCaseNo(reader.readString(fieldNumber));
				break;
			case fieldNumberLTFullname:
				builder.setLTFullname(reader.readString(fieldNumber));
				break;
			case fieldNumberLTAddress:
				builder.setLTAddress(reader.readString(fieldNumber));
				break;
			case fieldNumberLTApt:
				builder.setLTApt(reader.readString(fieldNumber));
				break;
			case fieldNumberLTCity:
				builder.setLTCity(reader.readString(fieldNumber));
				break;
			case fieldNumberLTState:
				builder.setLTState(reader.readString(fieldNumber));
				break;
			case fieldNumberLTZip:
				builder.setLTZip(reader.readString(fieldNumber));
				break;
			case fieldNumberServiceResult:
				builder.setServiceResult(reader.readString(fieldNumber));
				break;
			case fieldNumberDateOfService:
				builder.setDateOfService(reader.readString(fieldNumber));
				break;
			case fieldNumberTimeOfService:
				builder.setTimeOfService(reader.readString(fieldNumber));
				break;
			case fieldNumberGPSDate1:
				builder.setGPSDate1(reader.readString(fieldNumber));
				break;
			case fieldNumberGPSTime1:
				builder.setGPSTime1(reader.readString(fieldNumber));
				break;
			case fieldNumberGPSLat1:
				builder.setGPSLat1(reader.readDouble(fieldNumber));
				break;
			case fieldNumberGPSLon1:
				builder.setGPSLon1(reader.readDouble(fieldNumber));
				break;
			case fieldNumberGPSDate2:
				builder.setGPSDate2(reader.readString(fieldNumber));
				break;
			case fieldNumberGPSTime2:
				builder.setGPSTime2(reader.readString(fieldNumber));
				break;
			case fieldNumberGPSLat2:
				builder.setGPSLat2(reader.readDouble(fieldNumber));
				break;
			case fieldNumberGPSLon2:
				builder.setGPSLon2(reader.readDouble(fieldNumber));
				break;
			case fieldNumberGPSDate3:
				builder.setGPSDate3(reader.readString(fieldNumber));
				break;
			case fieldNumberGPSTime3:
				builder.setGPSTime3(reader.readString(fieldNumber));
				break;
			case fieldNumberGPSLat3:
				builder.setGPSLat3(reader.readDouble(fieldNumber));
				break;
			case fieldNumberGPSLon3:
				builder.setGPSLon3(reader.readDouble(fieldNumber));
				break;
			case fieldNumberPServ:
				builder.setPServ(reader.readString(fieldNumber));
				break;
			case fieldNumberCServ:
				builder.setCServ(reader.readString(fieldNumber));
				break;
			case fieldNumberCorpRecipient:
				builder.setCorpRecipient(reader.readString(fieldNumber));
				break;
			case fieldNumberCorpRecipientTitle:
				builder.setCorpRecipientTitle(reader.readString(fieldNumber));
				break;
			case fieldNumberPersonSeenSubstitute:
				builder.setPersonSeenSubstitute(reader.readString(fieldNumber));
				break;
			case fieldNumberPersonSeenDoeSubstitute:
				builder.setPersonSeenDoeSubstitute(reader.readString(fieldNumber));
				break;
			case fieldNumberPersonSeenPersonal:
				builder.setPersonSeenPersonal(reader.readString(fieldNumber));
				break;
			case fieldNumberPersonsNotSeenPersonal:
				builder.setPersonsNotSeenPersonal(reader.readString(fieldNumber));
				break;
			case fieldNumberDoorLock:
				builder.setDoorLock(reader.readString(fieldNumber));
				break;
			case fieldNumberOtherCommentsC:
				builder.setOtherCommentsC(reader.readString(fieldNumber));
				break;
			case fieldNumberOtherCommentsP:
				builder.setOtherCommentsP(reader.readString(fieldNumber));
				break;
			case fieldNumberFirstAttempt:
				builder.setFirstAttempt(reader.readInt(fieldNumber));
				break;
			case fieldNumberSecondAttempt:
				builder.setSecondAttempt(reader.readInt(fieldNumber));
				break;
			case fieldNumberThirdAttempt:
				builder.setThirdAttempt(reader.readInt(fieldNumber));
				break;
			case fieldNumberServiceCompleted:
				builder.setServiceCompleted(reader.readInt(fieldNumber));
				break;
			case fieldNumberRelatedPersons:
				Vector vcRelatedPersons = reader.readMessages(fieldNumberRelatedPersons);
				for(int i = 0 ; i < vcRelatedPersons.size(); i++) {
					byte[] eachBinData = (byte[]) vcRelatedPersons.elementAt(i);
					RelatedPersonMessages.Builder builderRelatedPersons = RelatedPersonMessages.newBuilder();
					InputReader innerInputReader = new InputReader(eachBinData, unknownTagHandler);
					boolean boolRelatedPersons = true;
					int nestedFieldRelatedPersons = -1;
					while(boolRelatedPersons) {
						nestedFieldRelatedPersons = getNextFieldNumber(innerInputReader);
						boolRelatedPersons = RelatedPersonMessages.populateBuilderWithField(innerInputReader, builderRelatedPersons, nestedFieldRelatedPersons);
					}
					eachBinData = null;
					innerInputReader = null;
					builder.setRelatedPersons(builderRelatedPersons.build());
				}
				break;
			case fieldNumberRelatedBusiness:
				Vector vcRelatedBusiness = reader.readMessages(fieldNumberRelatedBusiness);
				for(int i = 0 ; i < vcRelatedBusiness.size(); i++) {
					byte[] eachBinData = (byte[]) vcRelatedBusiness.elementAt(i);
					RelatedBusinessMessages.Builder builderRelatedBusiness = RelatedBusinessMessages.newBuilder();
					InputReader innerInputReader = new InputReader(eachBinData, unknownTagHandler);
					boolean boolRelatedBusiness = true;
					int nestedFieldRelatedBusiness = -1;
					while(boolRelatedBusiness) {
						nestedFieldRelatedBusiness = getNextFieldNumber(innerInputReader);
						boolRelatedBusiness = RelatedBusinessMessages.populateBuilderWithField(innerInputReader, builderRelatedBusiness, nestedFieldRelatedBusiness);
					}
					eachBinData = null;
					innerInputReader = null;
					builder.setRelatedBusiness(builderRelatedBusiness.build());
				}
				break;
			case fieldNumberSTND_ServiceType:
				builder.setSTND_ServiceType(reader.readString(fieldNumber));
				break;
			case fieldNumberSTND_TYPE10DESC:
				builder.setSTND_TYPE10DESC(reader.readString(fieldNumber));
				break;
			case fieldNumberSTND_INDEXNO:
				builder.setSTND_INDEXNO(reader.readString(fieldNumber));
				break;
			case fieldNumberSTND_Court:
				builder.setSTND_Court(reader.readString(fieldNumber));
				break;
			case fieldNumberSTND_County:
				builder.setSTND_County(reader.readString(fieldNumber));
				break;
			case fieldNumberSTND_Plantiff:
				builder.setSTND_Plantiff(reader.readString(fieldNumber));
				break;
			case fieldNumberSTND_Defendant:
				builder.setSTND_Defendant(reader.readString(fieldNumber));
				break;
			case fieldNumberSTND_FULLNAME:
				builder.setSTND_FULLNAME(reader.readString(fieldNumber));
				break;
			case fieldNumberSTND_ADDRESS:
				builder.setSTND_ADDRESS(reader.readString(fieldNumber));
				break;
			case fieldNumberSTND_APT:
				builder.setSTND_APT(reader.readString(fieldNumber));
				break;
			case fieldNumberSTND_CITY:
				builder.setSTND_CITY(reader.readString(fieldNumber));
				break;
			case fieldNumberSTND_STATE:
				builder.setSTND_STATE(reader.readString(fieldNumber));
				break;
			case fieldNumberSTND_ZIP:
				builder.setSTND_ZIP(reader.readString(fieldNumber));
				break;
			case fieldNumberLTBIZNAME:
				builder.setLTBIZNAME(reader.readString(fieldNumber));
				break;
			case fieldNumberPPSERVED1:
				builder.setPPSERVED1(reader.readString(fieldNumber));
				break;
			case fieldNumberServerLicenceNo:
				builder.setServerLicenceNo(reader.readString(fieldNumber));
				break;
				
			case fieldNumberGpsTimeOfService:
				builder.setGpsTimeOfService(reader.readString(fieldNumber));
				break;
						
			case  fieldNumberGpsTimeOfFirstAttempt:
				builder.setGpsTimeOfFirstAttempt(reader.readString(fieldNumber));
				break;
				
			case fieldNumberGpsTimeOfSecondAttempt:
				builder.setGpsTimeOfSecondAttempt(reader.readString(fieldNumber));
				break;
			
			case fieldNumberGpsTimeOfThirdAttempt:
				builder.setGpsTimeOfThirdAttempt(reader.readString(fieldNumber));
				break;
				
			case fieldNumberDeviceId:
				builder.setDeviceId(reader.readString(fieldNumber));
				break;
			case fieldNumberproducttype:
				builder.setproducttype(reader.readString(fieldNumber));
				break;
			
				
			default:
			fieldFound = false;
		}
		return fieldFound;
	}

	public static void setUnknownTagHandler(final UnknownTagHandler unknownTagHandler) {
		LegalDeliveryMessage.unknownTagHandler = unknownTagHandler;
	}

	public static LegalDeliveryMessage parseFrom(final byte[] data) throws IOException {
		return parseFields(new InputReader(data, unknownTagHandler));
	}

	public static LegalDeliveryMessage parseFrom(final InputStream inputStream) throws IOException {
		return parseFields(new InputReader(inputStream, unknownTagHandler));
	}

	public static LegalDeliveryMessage parseDelimitedFrom(final InputStream inputStream) throws IOException {
		final int limit = DelimitedSizeUtil.readDelimitedSize(inputStream);
		return parseFields(new InputReader(new DelimitedInputStream(inputStream, limit), unknownTagHandler));
	}
	
}